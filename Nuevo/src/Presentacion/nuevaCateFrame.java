/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;
import javax.swing.tree.*;
import Logica.Categoria;
import Logica.ControladorCategorias;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Mauro
 */
public class nuevaCateFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form nuevaCateFrame
     */
    public nuevaCateFrame() {
        initComponents();
        this.setTitle("Agregar nueva Categoría");
        this.setLocation(400, 130);
        try{
        llenarArbol("", null);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Hay un problema de conexión con la base de datos, por lo que no fue posible completar la acción", "ERROR", JOptionPane.ERROR_MESSAGE);
            //JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar librería SQL, por lo que no fue posible completar la acción", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        treePane = new javax.swing.JDesktopPane();
        txtNombreCat = new javax.swing.JTextField();
        lblNombreCat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newCategoriaTree = new javax.swing.JTree();
        lblNombrePadre = new javax.swing.JLabel();
        btnAgregarCat = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);

        lblNombreCat.setText("Nombre de la Categoría");

        jScrollPane1.setViewportView(newCategoriaTree);

        lblNombrePadre.setText("Seleccione el padre de la Categoría");

        btnAgregarCat.setText("Agregar");
        btnAgregarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCatActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        treePane.setLayer(txtNombreCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        treePane.setLayer(lblNombreCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        treePane.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        treePane.setLayer(lblNombrePadre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        treePane.setLayer(btnAgregarCat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        treePane.setLayer(btnCancelar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout treePaneLayout = new javax.swing.GroupLayout(treePane);
        treePane.setLayout(treePaneLayout);
        treePaneLayout.setHorizontalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNombreCat)
                        .addComponent(lblNombreCat, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                    .addGroup(treePaneLayout.createSequentialGroup()
                        .addComponent(btnAgregarCat)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)))
                .addGap(30, 30, 30)
                .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombrePadre))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        treePaneLayout.setVerticalGroup(
            treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(treePaneLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreCat)
                    .addComponent(lblNombrePadre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(treePaneLayout.createSequentialGroup()
                        .addComponent(txtNombreCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addGroup(treePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregarCat)
                            .addComponent(btnCancelar))
                        .addGap(0, 122, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(treePane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(treePane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCatActionPerformed
        // TODO add your handling code here:
        ControladorCategorias CC = new ControladorCategorias();
        String elegido="";
        boolean resultado=false;
        TreePath[] paths = newCategoriaTree.getSelectionPaths();
        if(paths != null){
            for (TreePath path : paths) {
                   Object P = path.getLastPathComponent();
                   elegido = P.toString();
            }
           String catAgregar = txtNombreCat.getText();
            
            try {
                resultado = CC.agregarNuevaCategoriaHija(catAgregar,elegido );
                System.out.println("Primer try");
                txtNombreCat.setText(null);
            } catch (SQLException ex) {
                txtNombreCat.setText(null);
                JOptionPane.showMessageDialog(this, "Hay un problema de conexión con la base de datos, por lo que no fue posible completar la acción", "ERROR", JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(resultado == true){
                   JOptionPane.showMessageDialog(this, "Se ha agregado con exito la categoria.");
                try {
                    this.llenarArbol("", null);
                    System.out.println("Segundo try");
                    txtNombreCat.setText(null);
                } catch (SQLException ex) {
                    txtNombreCat.setText(null);
                    JOptionPane.showMessageDialog(this, "Hay un problema con la base de datos, por lo que no fue posible completar la acción solicitada","ERROR",JOptionPane.ERROR_MESSAGE);
                    //Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
        }
        else{
            String catAgregar = txtNombreCat.getText();
            try {
               resultado = CC.agregarNuevaCategoriaPadre(catAgregar);
               if(resultado == true){
                   JOptionPane.showMessageDialog(this, "Se ha agregado con exito la categoria.");
                   this.llenarArbol("", null);
                   txtNombreCat.setText(null);
               }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Hay un problema con la base de datos, por lo que no fue posible completar la accion solicitada.","ERROR",JOptionPane.ERROR_MESSAGE);
                txtNombreCat.setText(null);
                //Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(nuevaCateFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btnAgregarCatActionPerformed
    public void llenarArbol(String padre, DefaultMutableTreeNode nodoPadre) throws SQLException, ClassNotFoundException{
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Categorías disponibles");
        ControladorCategorias categoriasHandler = new ControladorCategorias();
        if(padre == ""){
            ArrayList categoriasPadres = categoriasHandler.getCategoriasPadres();
            //System.out.println(categoriasPadres.size());
            for(int i = 0; i < categoriasPadres.size(); i++){
                DefaultMutableTreeNode nodosSuperiores = new DefaultMutableTreeNode(categoriasPadres.get(i));
                root.add(nodosSuperiores);
                llenarArbol((String) categoriasPadres.get(i), nodosSuperiores);
            }
        }
        else{
            ArrayList categoriasPadres = categoriasHandler.getCategoriasHijas((padre));
            for(int i = 0; i < categoriasPadres.size(); i++){
                DefaultMutableTreeNode nodosSuperiores = new DefaultMutableTreeNode(categoriasPadres.get(i));
                nodoPadre.add(nodosSuperiores);
                llenarArbol((String) categoriasPadres.get(i), nodosSuperiores);
            }
        }
        
        DefaultTreeModel treeModel = new DefaultTreeModel(root);
        newCategoriaTree.setModel(treeModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCat;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombreCat;
    private javax.swing.JLabel lblNombrePadre;
    private javax.swing.JTree newCategoriaTree;
    private javax.swing.JDesktopPane treePane;
    private javax.swing.JTextField txtNombreCat;
    // End of variables declaration//GEN-END:variables
}
